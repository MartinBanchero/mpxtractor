% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/combine_data_with_layout.R
\name{combine_data_with_layout}
\alias{combine_data_with_layout}
\title{Function specific to read layout files .csv}
\usage{
combine_data_with_layout(
  df_data,
  reader_type,
  dir_layout_files = NULL,
  layout_file_pattern = NULL,
  layout_files = NULL,
  layout_file_name = NULL
)
}
\arguments{
\item{df_data}{dataframe tidy}

\item{reader_type}{string with the name of one the reader machines}

\item{dir_layout_files}{specified the directory in which gather the files}

\item{layout_file_pattern}{specified pattern to match the file names}

\item{layout_files}{name of layout files}

\item{layout_file_name}{optional argument to assign name to plates}
}
\description{
This function recive as argument a dataframe (data) which is given for
one of the functions(read_spectramax_data, read_multiscango_data,
read_fluorstar_data). Also, the type of machine(spectramax, multiscango or fluorstar)
and the path to the layout files. This function can take many layout files as
argument.
}
\details{
\code{combine_data_with_layout} returns a dataframe with the data in
the raw files and in the layout files.
}
\examples{
file_path <- system.file("extdata", "test_layout_file.csv",
package = "mpxtractor")

data_file <- system.file("extdata",
"test_gr_spectramax.txt",
package = "mpxtractor")
df_spectramax_outdata_1 <- mpxtractor::read_spectramax_data(data_file)

# Data is store as a tibble
data_layout <- combine_data_with_layout(
 df_spectramax_outdata_1,
 reader_type = "spectramax",
 layout_files = file_path
)

# Now data is tidy
head(data_layout)
}
